{
  "response": {
    "docs": [
      {
        "Id": [59167792],
        "Body": "I am trying to loop through a dictionary of lists and return the keys of values which contain a specific integer.\nFor example if I loop through `{0: [3], 1: [3], 2: [4, 0], 3: [1], 4: [1, 0, 2, 3]}` with `v = 4`, it should return `[2]`.\nHowever, my code seems to only consider the very first key-value pair and I do not understand why. It works if the integer is in the first key-value pair and not in any others. Here is the function I made:\n```\ndef whence(g, v):\n    # Your code here\n    lov = []\n    count = 0 \n    for key, value in g.items(): \n        if v in value:\n            lov.append(count)\n        count += 1\n        print(lov)\n        return lov\n```\n\n",
        "Title": "Why does my loop stop after the first iteration?",
        "score": 0.8847611
      },
      {
        "Id": [74986165],
        "Body": "I am not getting the expected result from this code below, as I expect a display of numbers excluding 4.\n```\nz = 0\n\nwhile z \u003C 6:\n    if z == 4:\n        continue\n    z = z + 1\n    print(z)\n```\n\nI get numbers from 1 to 4\n",
        "Title": "Iteration in python",
        "score": 0.87687886
      },
      {
        "Id": [22706762],
        "Body": "```\ndef intersect(seq,seq1):\n    res = []\n    for x in seq:\n        if x in seq1:\n            res.append(x)\n            return res\n```\n\n`return res` only returns `['s']` but with `seq=\"spam\"` and `seq1=\"scam\"` in the function call, why is it not returning `['s','a','m']`?\n",
        "Title": "python's 'return' returns only first iteration result of the loop",
        "score": 0.83927214
      },
      {
        "Id": [75123051],
        "Body": "```\nstudent_heights = input(\"Input a list of studen heights \").split()\n\ntotal_height = 0\nfor height in student_heights:\n  total_height += height\nprint(total_height)\n\nnumber_of_students = 0\nfor student in student_heights:\n  number_of_students += 1\nprint(number_of_students)\n```\n\n\n---\n\n\nIm following with the teacher on a online course and I don't see what im doing wrong.\nthe error I am getting is\n```\nTraceback (most recent call last):\n  File \"main.py\", line 5, in \u003Cmodule\u003E\n    total_height += height\nTypeError: unsupported operand type(s) for +=: 'int' and 'str'\n```\n\n",
        "Title": "Python help for Loop",
        "score": 0.83156955
      },
      {
        "Id": [75228089],
        "Body": "I was trying to run the code below when scraping data from a website:\n```\nfor match in match_data:\n    home_team.append(match.find('th', class_='fhome').get_text())\n    score.append(match.find('th', class_='fscore').get_text())\n    away_team.append(match.find('th', class_='faway').get_text())\n```\n\nthen I got the error message below:\nNameError: name 'home_team' is not defined\nI tried to USE the code below:\n```\nfor match in match_data:\n    hometeam = home_team.append(match.find('th', class_='fhome').get_text())\n    tscore = score.append(match.find('th', class_='fscore').get_text())\n    awayteam = away_team.append(match.find('th', class_='faway').get_text())\n```\n\nBut the error message is still the same as above\n",
        "Title": "I am trying to find the problem within this code",
        "score": 0.83012843
      },
      {
        "Id": [7463683],
        "Body": "I'm working through a [tutorial](http://pyneurgen.sourceforge.net/tutorial_nn.html) which includes this code:\n```\nfor position, target in population_gen(population):\n    pos = float(position)\n    all_inputs.append([random.random(), pos * factor])\n    all_targets.append([target])\n```\n\nI don't fully understand how the `for` loop works. In particular: what is the loop iterating through exactly? I'm only familiar with simple examples like `for i in mylist:`. How can there be a function call on the right-hand side of `in`, and two things separated by a comma on the left-hand side?\n",
        "Title": "Don't understand this python For loop",
        "score": 0.82938313
      },
      {
        "Id": [75108770],
        "Body": "Issue: The for loop for this function is not iterating the over all elements. Its stopping at 1. I used some diagnostic print statements to count the number of loops and its stopping at 1. I have reviewed the indentiation and the loop but cannot seem to find the issue.\n```\ndef process_data(data):\n    \"\"\"Analyzes the data, looking for maximums.\n\n    Returns a list of lines that summarize the information.\n    \"\"\"\n    loop_count = 0\n    year_by_sales = dict()\n    max_revenue = {\"revenue\": 0}\n    # -----------\u003EThis is where the Loop Issue Exists \u003C-----\n    for item in data:\n        item_price = locale.atof(item[\"price\"].strip(\"$\"))\n        item_revenue = item[\"total_sales\"] * item_price\n        if item[\"car\"][\"car_year\"] not in year_by_sales.keys():\n            year_by_sales[item[\"car\"][\"car_year\"]] = item[\"total_sales\"]\n            loop_count += 1\n            if item_revenue \u003E max_revenue[\"revenue\"]:\n                item[\"revenue\"] = item_revenue\n                max_revenue = item\n                most_sold_model = item['car']['car_model']\n                highest_total_sales = item[\"total_sales\"]\n        else:\n            year_by_sales[item[\"car\"][\"car_year\"]] += item[\"total_sales\"]\n            loop_count +=1 \n        most_popular_year = max(year_by_sales, key=year_by_sales.get)\n        summary = [\n            \"The {} generated the most revenue: ${}\".format(\n                format_car(max_revenue[\"car\"]), max_revenue[\"revenue\"]\n            ),\n            f\"The {most_sold_model} had the most sales: {highest_total_sales}\",\n            f\"The most popular year was {most_popular_year} with {highest_total_sales} sales.\",\n        ]\n        print(loop_count)\n        print(year_by_sales)\n        return summary\n```\n\n\n# Input Data\n\n\n```\n[{\n        \"id\": 1,\n        \"car\": {\n            \"car_make\": \"Ford\",\n            \"car_model\": \"Club Wagon\",\n            \"car_year\": 1997\n        },\n        \"price\": \"$5179.39\",\n        \"total_sales\": 446\n    },\n    {\n        \"id\": 2,\n        \"car\": {\n            \"car_make\": \"Acura\",\n            \"car_model\": \"TL\",\n            \"car_year\": 2005\n        },\n        \"price\": \"$14558.19\",\n        \"total_sales\": 589\n    },\n    {\n        \"id\": 3,\n        \"car\": {\n            \"car_make\": \"Volkswagen\",\n            \"car_model\": \"Jetta\",\n            \"car_year\": 2009\n        },\n        \"price\": \"$14879.11\",\n        \"total_sales\": 825\n    }]\n```\n\nThe entire codebase for this script is [https://replit.com/join/dkuzpdujne-terry-brooksjr](https://replit.com/join/dkuzpdujne-terry-brooksjr)\n",
        "Title": "For Loop - Failing to Iterate Over Elements",
        "score": 0.8287735
      },
      {
        "Id": [4002598],
        "Body": "\u003E \n  [Python - Previous and next values inside a loop](https://stackoverflow.com/questions/1011938/python-previous-and-next-values-inside-a-loop)\n  [python for loop, how to find next value(object)?](https://stackoverflow.com/questions/3929039/python-for-loop-how-to-find-next-valueobject)  \n\n\n\nI've got a list that contains a lot of elements, I iterate over the list using a `for` loop. For example:\n\n```\nli = [2, 31, 321, 41, 3423, 4, 234, 24, 32, 42, 3, 24, 31, 123]\n\nfor i in li:\n    print(i)\n```\n\n\nBut I want to get the element before `i`. How can I achieve that?\n",
        "Title": "How to get the previous element when using a for loop?",
        "score": 0.8267864
      },
      {
        "Id": [75226436],
        "Body": "I have a question. What is wrong with this loop?\nI'm writing a number-guessing mini-game.\nThe problem is that when the user enters the correct number on the second or third  try, the loop still forces the user to 'try again' even though the correct number was entered but not the first time. The rule of the game is 4 chances to guess the other player's number\n```\ndef do_action_to_guess(first_number: int, second_number: int):\n    counter = 0\n    while counter \u003C 4:\n        if first_number != second_number:\n            counter += 1\n            second_number = int(input('Try again'))\n        elif first_number == second_number:\n            print('That is correct number')\n            break\n\n    else:\n        print('Out of chances')\n    return counter\n```\n\n",
        "Title": "Python basic loops",
        "score": 0.82552266
      },
      {
        "Id": [71312458],
        "Body": "When I run this code and give input as 25 it should return me ,\nBut when I debug the code the range values are not iterating into if condition, only the first value of the range is passed and if its not == 0 it moves to the else part.\n```\ndef find(x):\n    if x \u003E 1:\n        for i in range(2,x):\n            if x % i == 0:\n                return \"its not a prime num\"\n            else:\n                return \"Its a prime num\"\n\n\nuser = int(input(\"Enter your no: \"))\nprint(find(user))\n```\n\nPlease help me why its working like this , I am new to programming . TIA\n",
        "Title": "Why my for loop is not iterating all the values",
        "score": 0.8236952
      }
    ]
  }
}
